<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.metoo.nspm.core.mapper.nspm.CredentialMapper">

    <resultMap id="Base_Result_Map" type="com.metoo.nspm.entity.nspm.Credential">
        <result property="groupId" column="group_id"></result>
        <result property="groupName" column="group_name"></result>
        <result property="userId" column="user_id"></result>
        <result property="userName" column="user_name"></result>
    </resultMap>

    <resultMap id="All_Result_Map" type="com.metoo.nspm.vo.CredentialAllVO">
        <result property="id" column="id"></result>
        <result property="name" column="name"></result>
    </resultMap>

    <sql id="Base_Column_List">
        id, addTime, name, loginName, loginPassword, enableUserName, enablePassword, group_id,
        traffic_permit, user_id
    </sql>

    <select id="getObjById" parameterType="java.lang.Long" resultType="com.metoo.nspm.entity.nspm.Credential">
            SELECT * FROM metoo_credential
            WHERE id = #{id}
    </select>

    <select id="getObjByName" parameterType="java.lang.String" resultType="com.metoo.nspm.entity.nspm.Credential">
            SELECT * FROM metoo_credential
            WHERE `name` = #{name}
    </select>


    <!--根据 Level查询凭据-->
    <select id="getObjsByLevel" parameterType="com.metoo.nspm.entity.nspm.Credential"
            resultType="com.metoo.nspm.entity.nspm.Credential">
        SELECT *
        FROM metoo_credential
        where branchLevel = #{branchLevel} or branchLevel in (
          SELECT `level` FROM metoo_group WHERE parentLevel = #{branchLevel}
        )
    </select>

    <select id="selectConditionQuery" parameterType="com.metoo.nspm.dto.CredentialDTO"
            resultMap="Base_Result_Map">
          SELECT <include refid="Base_Column_List"/>
          FROM metoo_credential
          <where>
              <if test="name != null and name != ''">
                  AND name = #{name}
              </if>
              <if test="groupId != null and groupId != ''">
                 AND group_id = #{groupId}
              </if>
             <if test="groupIds != null and groupIds != ''">
                AND group_id in
                <foreach collection="groupIds" index = "index" item="item" separator="," open="(" close=")">
                    #{item}
                </foreach>
             </if>
          </where>
    </select>

    <select id="getAll" resultMap="All_Result_Map">
        SELECT id, name
        FROM metoo_credential
    </select>


    <insert id="save" parameterType="com.metoo.nspm.entity.nspm.Credential" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO metoo_credential
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="addTime != null">
                addTime,
            </if>
            <if test="uuid != null">
                uuid,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="loginName != null">
                loginName,
            </if>
            <if test="loginPassword != null">
                loginPassword,
            </if>
            <if test="enableUserName != null">
                enableUserName,
            </if>
            <if test="enablePassword != null">
                enablePassword,
            </if>
            <if test="branchId != null">
                branchId,
            </if>
            <if test="branchLevel != null">
                branchLevel,
            </if>
            <if test="credentialId != null">
                credentialId,
            </if>
            <if test="trafficPermit != null">
                traffic_permit,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="groupId != null">
                group_id,
            </if>
            <if test="groupName != null">
                group_name,
            </if>
        </trim>
        <trim prefix="VALUES(" suffix=")" suffixOverrides=",">
        <if test="addTime != null">
            #{addTime},
        </if>
        <if test="uuid != null">
            #{uuid},
        </if>
        <if test="name != null">
            #{name},
        </if>
        <if test="loginName != null">
            #{loginName},
        </if>
        <if test="loginPassword != null">
            #{loginPassword},
        </if>
        <if test="enableUserName != null">
            #{enableUserName},
        </if>
        <if test="enablePassword != null">
            #{enablePassword},
        </if>
        <if test="branchId != null">
            #{branchId},
        </if>
        <if test="branchLevel != null">
            #{branchLevel},
        </if>
        <if test="credentialId != null">
            #{credentialId},
        </if>
        <if test="trafficPermit != null">
            #{trafficPermit},
        </if>
        <if test="userId != null">
            #{userId},
        </if>
        <if test="userName != null">
            #{userName},
        </if>
        <if test="groupId != null">
            #{groupId},
        </if>
    </trim>
    </insert>

    <update id="update" parameterType="com.metoo.nspm.entity.nspm.Credential">
        UPDATE metoo_credential
        <set>
            <if test="name != null">
                name = #{name},
            </if>
            <if test="loginName != null">
                loginName = #{loginName},
            </if>
            <if test="loginPassword != null">
                loginPassword = #{loginPassword},
            </if>
            <if test="enableUserName != ''">
                enableUserName = #{enableUserName},
            </if>
            <if test="enablePassword != ''">
                enablePassword = #{enablePassword},
            </if>
            <if test="trafficPermit != null">
                traffic_permit = #{trafficPermit},
            </if>
        </set>
        where id = #{id}
    </update>

    <delete id="delete" parameterType="java.lang.Long">
        DELETE FROM metoo_credential
        WHERE id = #{id}
    </delete>

    <delete id="batchesDel" parameterType="java.lang.Long">
        DELETE FROM metoo_credential
        WHERE id in
        <foreach collection="array" item="item"  separator="," open="(" close=")">
            #{item}
        </foreach>
    </delete>




</mapper>